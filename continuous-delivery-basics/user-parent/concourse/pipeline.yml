# Concourse pipeline definition for the user service.
---
resource_types:
- name: maven-resource
  type: docker-image
  source:
    repository: patrickcrocker/maven-resource
    tag: latest
resources:
- name: user-microservice
  type: git
  source:
    uri: https://github.com/cloud-native-java/continuous-delivery
    branch: master
    paths:
    - ./continuous-delivery-basics/user-parent/cd-user-microservice
- name: user-integration
  type: git
  source:
    uri: https://github.com/cloud-native-java/continuous-delivery
    branch: master
    paths:
    - ./continuous-delivery-basics/user-parent/user-consumer-tests
- name: snapshot
  type: maven-resource
  source:
    url: https://cloudnativejava.jfrog.io/cloudnativejava/libs-release-local/
    artifact: cnj:cd-user-microservice:jar
    username: {{artifactory-username}}
    password: {{artifactory-password}}
- name: version
  type: semver
  source:
    driver: git
    initial_version: 1.0.0-SNAPSHOT.0
    uri: git@github.com:cloud-native-java/continuous-delivery.git
    branch: version
    file: version
    private_key: {{git-private-key}}
- name: cf-deploy-release
  type: cf
  source:
    api: https://api.run.pivotal.io
    username: {{cf-username}}
    password: {{cf-password}}
    organization: {{cf-org}}
    space: {{cf-space}}
    skip_cert_check: false
jobs:
- name: unit
  max_in_flight: 1
  plan:
  - get: user-microservice
    trigger: true
  - task: unit
    file: user-microservice/continuous-delivery-basics/user-parent/concourse/unit/unit.yml
- name: integration
  plan:
  - aggregate:
    - get: user-microservice
      trigger: true
      passed: [unit]
    - get: user-integration
      trigger: true
  - get: version
    params: { pre: SNAPSHOT }
  - task: consumer-tests
    file: user-microservice/continuous-delivery-basics/user-parent/concourse/integration/consumer-tests.yml
  - put: snapshot
    params:
      file: release/cd-user-microservice.jar
      pom_file: user-microservice/continuous-delivery-basics/user-parent/cd-user-microservice/pom.xml
      version_file: version/version
  - put: version
    params: { file: version/version }
- name: release
  serial: true
  plan:
  - aggregate:
    - get: user-microservice
      passed: [integration]
    - get: version
      passed: [integration]
    - get: snapshot
      trigger: true
      passed: [integration]
  - task: deploy
    file: user-microservice/continuous-delivery-basics/user-parent/concourse/release/release.yml
  - put: cf-deploy-release
    params:
      manifest: build-output/manifest.yml