
---
resources:
- name: user-microservice
  type: git
  source:
    uri: https://github.com/cloud-native-java/continuous-delivery
    branch: master
    paths:
    - ./continuous-delivery-basics/user-microservice
- name: account-microservice
  type: git
  source:
    uri: https://github.com/cloud-native-java/continuous-delivery
    branch: master
    paths:
    - ./continuous-delivery-basics/account-microservice
jobs:
- name: user-microservice-unit
  max_in_flight: 1
  plan:
  - get: user-microservice
    trigger: true
  - task: unit
    file: microservices/user-microservice/deployment/tasks/unit.yml
jobs:
- name: account-microservice-unit
  max_in_flight: 1
  plan:
  - get: account-microservice
    trigger: true
  - task: unit
    file: microservices/account-microservice/deployment/tasks/unit.yml
- name: microservice-integration
  plan:
  - aggregate:
    - get: user-microservice
      trigger: true
      passed: [user-microservice-unit]
    - get: account-microservice
      trigger: true
      passed: [account-microservice-unit]
    - get: integration-suite
      trigger: true
  - task: integration
    file: integration-suite/task.yml
- name: project-created-ci
  max_in_flight: 1
  plan:
  - get: project-created
    trigger: true
  - task: prepare
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: busybox}
      inputs:
        - name: project-created
      outputs:
        - name: functions
        - name: scripts
      run:
        path: sh
        args:
        - -exc
        - |
          cp -r project-created/cqrs-block/functions/* functions \
          && cp -r project-created/cqrs-block/deployment/scripts/* scripts
  - task: package
    file: project-created/cqrs-block/deployment/tasks/build-js-function.yml
    params:
      function_name: project-created
  - task: deploy
    file: project-created/cqrs-block/deployment/tasks/deploy-js-function.yml
    params:
      function_name: project-created
      aws_default_region: {{aws-region}}
      aws_access_key_id: {{aws-access-key-id}}
      aws_secret_access_key: {{aws-access-key-secret}}
      bucket_name: {{s3-bucket}}
      service_instance: {{pws-mysql-service}}
      service_key: {{pws-mysql-service-key}}
      api: {{pws-api}}
      username: {{pws-username}}
      password: {{pws-password}}
      organization: {{pws-org}}
      space: {{pws-space}}
- name: project-committed-ci
  max_in_flight: 1
  plan:
  - get: project-committed
    trigger: true
  - task: prepare
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: busybox}
      inputs:
        - name: project-committed
      outputs:
        - name: functions
        - name: scripts
      run:
        path: sh
        args:
        - -exc
        - |
          cp -r project-committed/cqrs-block/functions/* functions \
          && cp -r project-committed/cqrs-block/deployment/scripts/* scripts
  - task: package
    file: project-committed/cqrs-block/deployment/tasks/build-js-function.yml
    params:
      function_name: project-committed
  - task: deploy
    file: project-committed/cqrs-block/deployment/tasks/deploy-js-function.yml
    params:
      function_name: project-committed
      aws_default_region: {{aws-region}}
      aws_access_key_id: {{aws-access-key-id}}
      aws_secret_access_key: {{aws-access-key-secret}}
      bucket_name: {{s3-bucket}}
      service_instance: {{pws-mysql-service}}
      service_key: {{pws-mysql-service-key}}
      api: {{pws-api}}
      username: {{pws-username}}
      password: {{pws-password}}
      organization: {{pws-org}}
      space: {{pws-space}}
- name: tight-coupling-query-ci
  max_in_flight: 1
  plan:
  - get: tight-coupling-query
    trigger: true
  - task: prepare
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: busybox}
      inputs:
        - name: tight-coupling-query
      outputs:
        - name: functions
        - name: scripts
      run:
        path: sh
        args:
        - -exc
        - |
          cp -r tight-coupling-query/cqrs-block/functions/* functions \
          && cp -r tight-coupling-query/cqrs-block/deployment/scripts/* scripts
  - task: package
    file: tight-coupling-query/cqrs-block/deployment/tasks/build-js-function.yml
    params:
      function_name: tight-coupling-query
  - task: deploy
    file: tight-coupling-query/cqrs-block/deployment/tasks/deploy-js-function.yml
    params:
      function_name: tight-coupling-query
      aws_default_region: {{aws-region}}
      aws_access_key_id: {{aws-access-key-id}}
      aws_secret_access_key: {{aws-access-key-secret}}
      bucket_name: {{s3-bucket}}
      service_instance: {{pws-mysql-service}}
      service_key: {{pws-mysql-service-key}}
      api: {{pws-api}}
      username: {{pws-username}}
      password: {{pws-password}}
      organization: {{pws-org}}
      space: {{pws-space}}